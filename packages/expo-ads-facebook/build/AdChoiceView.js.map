{"version":3,"file":"AdChoiceView.js","sourceRoot":"","sources":["../src/AdChoiceView.tsx"],"names":[],"mappings":"AAAA,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAQ,cAAc,EAAE,MAAM,cAAc,CAAC;AACpD,OAAO,EAAE,wBAAwB,EAAE,MAAM,kBAAkB,CAAC;AAE5D,OAAO,EAAE,mBAAmB,EAA4B,MAAM,gBAAgB,CAAC;AAE/E,IAAK,iBAGJ;AAHD,WAAK,iBAAiB;IACpB,qEAAc,CAAA;IACd,iEAAY,CAAA;AACd,CAAC,EAHI,iBAAiB,KAAjB,iBAAiB,QAGrB;AAOD,MAAM,CAAC,OAAO,OAAO,YAAa,SAAQ,KAAK,CAAC,SAAgB;IAAhE;;QAME,0BAAqB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,YAAY,CAAC;IAiCxE,CAAC;IA/BC,MAAM;QACJ,MAAM,KAAK,GAAG,IAAI,CAAC,qBAAqB,EAAE;YACxC,CAAC,CAAC;gBACE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC;gBACjC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;aAC/B;YACH,CAAC,CAAC;gBACE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAC7B,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC;aACnC,CAAC;QAEN,OAAO,CACL,CAAC,mBAAmB,CAAC,QAAQ,CAC3B;QAAA,CAAC,CAAC,YAA6C,EAAE,EAAE;YACjD,IAAI,SAAS,GAAG,UAAU,CAAC,YAAY,IAAI,YAAY,CAAC,eAAe,CAAC,CAAC;YACzE,OAAO,CACL,CAAC,kBAAkB,CACjB,IAAI,IAAI,CAAC,KAAK,CAAC,CACf,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CACjC,eAAe,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CACnD,WAAW,CAAC,CACV,IAAI,CAAC,qBAAqB,EAAE;gBAC1B,CAAC,CAAC,iBAAiB,CAAC,UAAU;gBAC9B,CAAC,CAAC,iBAAiB,CAAC,QAAQ,CAC/B,EACD,CACH,CAAC;QACJ,CAAC,CACH;MAAA,EAAE,mBAAmB,CAAC,QAAQ,CAAC,CAChC,CAAC;IACJ,CAAC;;AArCM,yBAAY,GAAG;IACpB,QAAQ,EAAE,EAAE;IACZ,WAAW,EAAE,YAAY;CAC1B,CAAC;AAuCJ,MAAM,CAAC,MAAM,kBAAkB,GAAG,wBAAwB,CAAC,cAAc,CAAC,CAAC","sourcesContent":["import nullthrows from 'nullthrows';\nimport React from 'react';\nimport { View, findNodeHandle } from 'react-native';\nimport { requireNativeViewManager } from '@unimodules/core';\n\nimport { AdChoiceViewContext, AdChoiceViewContextValue } from './withNativeAd';\n\nenum NativeOrientation {\n  Horizontal = 0,\n  Vertical = 1,\n}\n\ntype Props = React.ComponentProps<typeof View> & {\n  iconSize: number;\n  orientation: 'horizontal' | 'vertical';\n};\n\nexport default class AdChoiceView extends React.Component<Props> {\n  static defaultProps = {\n    iconSize: 23,\n    orientation: 'horizontal',\n  };\n\n  shouldAlignHorizontal = () => this.props.orientation === 'horizontal';\n\n  render() {\n    const style = this.shouldAlignHorizontal()\n      ? {\n          minWidth: this.props.iconSize * 2,\n          minHeight: this.props.iconSize,\n        }\n      : {\n          minWidth: this.props.iconSize,\n          minHeight: this.props.iconSize * 2,\n        };\n\n    return (\n      <AdChoiceViewContext.Consumer>\n        {(contextValue: AdChoiceViewContextValue | null) => {\n          let adViewRef = nullthrows(contextValue && contextValue.nativeAdViewRef);\n          return (\n            <NativeAdChoiceView\n              {...this.props}\n              style={[this.props.style, style]}\n              nativeAdViewTag={findNodeHandle(adViewRef.current)}\n              orientation={\n                this.shouldAlignHorizontal()\n                  ? NativeOrientation.Horizontal\n                  : NativeOrientation.Vertical\n              }\n            />\n          );\n        }}\n      </AdChoiceViewContext.Consumer>\n    );\n  }\n}\n\n// The native AdChoiceView has the same props as regular View\nexport type NativeAdChoiceView = React.Component<Props>;\nexport const NativeAdChoiceView = requireNativeViewManager('AdChoiceView');\n"]}